###########################
# Plugins prefixes
###########################
# prefix + g - prompts for session name and switches to it. Performs 'kind-of' name completion.
# prefix + C (shift + c) - prompt for creating a new session by name.
# prefix + X (shift + x) - kill current session without detaching Tmux.
# prefix + S (shift + s) - switches to the last session.
# prefix + @ - promote current pane into a new session. Analogous to how prefix + ! breaks current pane to a new window.
# prefix + t<secondary-key> - join currently marked pane (prefix + m) to current session/window, and switch to it.
#
# secondary-keys 
# h, -, ": join horizontally
# v, |, %: join vertically
# f, @: join full screen
#
# If tmux stops working all of sudden use pkill tmux to stop it in the background
#

set -g activity-action other
set -g assume-paste-time 1

# Start window and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

# No Bell at all
set -g bell-action none

# This was disabled because it was causing errors
#set -g default-command 

set -g default-shell /bin/zsh
set -g default-size 80x24
set -g destroy-unattached off
set -g detach-on-destroy on
set -g display-panes-active-colour red
set -g display-panes-colour blue
set -g display-panes-time 1000
set -g display-time 750

# re-number windows when one is closed
set -g renumber-windows on

#---------Visual-------------# 
# Active/Inactive Pane Coloring 
set -g window-style 'fg=colour247,bg=colour236'
set -g window-active-style 'fg=default,bg=colour234'

# Pane Coloring
set -g pane-border-style 'fg=colour235,bg=colour238'
set -g pane-active-border-style 'fg=blue,bg=colour236'

# Set the active window color and style
set -g window-status-current-style fg=black,bg=colour136
set -g window-status-current-format ' #I #W '

# Quality of life stuff
set -g default-terminal "tmux-256color"
set -g history-limit 10000
set -g allow-rename off
set -g escape-time 1
set -w synchronize-panes on

set -g key-table root
set -g lock-after-time 0
set -g lock-command "lock -np"
set -g message-command-style fg=green,bg=black
set -g message-style fg=black,bg=green

# Toggle Mouse Support
bind-key m set-option -g mouse \; display "Mouse: #{?mouse,ON,OFF}"

# Stops the scrolling from resetting when selecting text with mouse
unbind -n MouseDrag1Pane
unbind -T copy-mode MouseDragEnd1Pane  

# Remap prefix to screens
set -g prefix C-a
bind C-a send-prefix
unbind C-b

# This was disabled because it was causing errors
#set -g prefix2 Invalid#1fff00000000

#------------Status Bar---------------#
set -g renumber-windows off
set -g repeat-time 500
set -g set-titles off
set -g set-titles-string "#S:#I:#W - \"#T\" #{session_alerts}"
set -g silence-action other
set -g status on
set -g status-bg blue
set -g status-fg black
set -g status-format[0] "#[align=left range=left #{status-left-style}]#[push-default]#{T;=/#{status-left-length}:status-left}#[pop-default]#[norange default]#[list=on align=#{status-justify}]#[list=left-marker]<#[list=right-marker]>#[list=on]#{W:#[range=window|#{window_index} #{window-status-style}#{?#{&&:#{window_last_flag},#{!=:#{window-status-last-style},default}}, #{window-status-last-style},}#{?#{&&:#{window_bell_flag},#{!=:#{window-status-bell-style},default}}, #{window-status-bell-style},#{?#{&&:#{||:#{window_activity_flag},#{window_silence_flag}},#{!=:#{window-status-activity-style},default}}, #{window-status-activity-style},}}]#[push-default]#{T:window-status-format}#[pop-default]#[norange default]#{?window_end_flag,,#{window-status-separator}},#[range=window|#{window_index} list=focus #{?#{!=:#{window-status-current-style},default},#{window-status-current-style},#{window-status-style}}#{?#{&&:#{window_last_flag},#{!=:#{window-status-last-style},default}}, #{window-status-last-style},}#{?#{&&:#{window_bell_flag},#{!=:#{window-status-bell-style},default}}, #{window-status-bell-style},#{?#{&&:#{||:#{window_activity_flag},#{window_silence_flag}},#{!=:#{window-status-activity-style},default}}, #{window-status-activity-style},}}]#[push-default]#{T:window-status-current-format}#[pop-default]#[norange list=on default]#{?window_end_flag,,#{window-status-separator}}}#[nolist align=right range=right #{status-right-style}]#[push-default]#{T;=/#{status-right-length}:status-right}#[pop-default]#[norange default]"
set -g status-format[1] "#[align=centre]#{P:#{?pane_active,#[reverse],}#{pane_index}[#{pane_width}x#{pane_height}]#[default] }"
set -g status-interval 15
set -g status-justify left
set -g status-keys emacs
set -g status-left "[#S] "
set -g status-left-length 10
set -g status-left-style default
set -g status-position top

# Display Status of the Continuum along with date and time
set -g status-right "#{?window_bigger,[#{window_offset_x}#,#{window_offset_y}] ,}\"#{=21:pane_title}\" %b-%d Continuum Status: #{continuum_status}"

# Increase length of the status bar on the right
set -g status-right-length 140
set -g status-right-style default

#-------------Visual-----------------#
set -g status-style fg=black,bg=blue
set -g update-environment[0] DISPLAY
set -g update-environment[1] KRB5CCNAME
set -g update-environment[2] SSH_ASKPASS
set -g update-environment[3] SSH_AUTH_SOCK
set -g update-environment[4] SSH_AGENT_PID
set -g update-environment[5] SSH_CONNECTION
set -g update-environment[6] WINDOWID
set -g update-environment[7] XAUTHORITY
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -g word-separators " "

# split panes using | and -
bind c new-window -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded tmux config!"    

# Search Mode vim (default is emac), to navigating through output in quick way
set-window-option -g mode-keys vi

###########################                                                                                              
# Copy & Paste                                                                                                                 
###########################
#
#
#
# For the following to work, install xclip <==IMPORTANT
# Vim Style in Copy-Mode "<prefix> ["
# Interacting with Paste Buffer
bind-key Escape copy-mode
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection            -N "start visual mode for selection"
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection-and-cancel  -N "yank text into the buffer"
bind-key C-b choose-buffer # view the buffer stack
unbind-key p
bind-key p paste-buffer # default "<prefix> ]"

# Alt+C: To copy from the current buffer to the sys clipboard .
bind-key M-c run "tmux save-buffer - | xclip -i -sel clipboard"

# Alt+V: To paste text from sys clipboard into current buffer
bind-key M-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\""

# Ctr+C: Make it even better -just one step to move from sys->buffer->editor vice versa
bind-key -Tcopy-mode-vi C-c send -X copy-pipe "xclip -i -sel p -f | xclip -i -sel c" \; display-message "copied to system clipboard"

# Ctr+V: To paste text from sys clipboard into the view
bind-key C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\";tmux paste-buffer"

# To take ASCII screenshots (tmux-resurrect uses C-s for saving, here binding to Alt-s ) .
# create the dir for storing screenshots
bind-key M-s run "tmux capture-pane; tmux save-buffer ~/.mytmux/pane_screenshots/\"$(date +%FT%T)\".screenshots"

# Stops the scrolling from resetting when selecting text with mouse                                                     
unbind-key -T copy-mode-vi MouseDragEnd1Pane

# Save tmux session logs
#run-shell /opt/tmux-logging/logging.tmux

# Using Meta-arrow keys without prefix keys to switch panes (Meta is option on Macs)
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Shift arrow to switch windows
bind -n S-Left previous-window
bind -n S-Right next-window

# Enable saving and restoring tmux pane contents
set -g @resurrect-capture-pane-contents 'on'

# Save interval in minutes
set -g @continuum-save-interval '15'

###########################
# Plugins
###########################
# Setup TPM first
#   1) Check instructions on GitHub
# To install plugins:
#   1) Add plugin down here
#   2) Prefix + I to install plugin
# To update plugins:
#   1) Prefix + U
# To remove plugins:
#   1) Remove line down here
#   2) Prefix + ALT + U  

# List of plugins
#
# Plugin Manager
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Nord Theme
# set -g @plugin "arcticicestudio/nord-tmux"

# Allows copying to the host clipboard
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'

# Allows for pane and session resurrection, only works once per restart
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/vim-tmux'

# Periodically backup Tmux
set -g @plugin 'tmux-plugins/tmux-continuum'

# Provides more features to controlling sessions
set -g @plugin 'tmux-plugins/tmux-sessionist'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize Tmux plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
